{"interfaceLanguages":{"swift":[{"children":[{"title":"ShieldSecurity","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/init(type:keysize:)","title":"init(type: SecKeyType?, keySize: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/keysize","title":"let keySize: Int?","type":"property"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/type","title":"let type: SecKeyType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/generate(label:flags:)","title":"func generate(label: String?, flags: Set<Flag>) throws -> SecKeyPair","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/keysize(_:)","title":"func keySize(Int) -> Builder","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/type(_:)","title":"func type(SecKeyType) -> Builder","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/flag\/secureenclave","title":"case secureEnclave","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/flag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/flag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/builder\/flag","title":"SecKeyPair.Builder.Flag","type":"enum"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/builder","title":"SecKeyPair.Builder","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/exportkeylength","title":"var exportKeyLength: UInt64","type":"property"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/exportkeyrounds","title":"var exportKeyRounds: UInt64","type":"property"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/exportkeysalt","title":"var exportKeySalt: Data","type":"property"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/keymaterial","title":"var keyMaterial: Data","type":"property"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/keytype","title":"var keyType: SecKeyType","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/asn1schema","title":"static let asn1Schema: Schema","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/encoded()","title":"func encoded() throws -> Data","type":"method"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/exportedkey","title":"SecKeyPair.ExportedKey","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/init(privatekey:publickey:)","title":"init(privateKey: SecKey, publicKey: SecKey)","type":"init"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/init(privatekeyref:publickeyref:)","title":"init(privateKeyRef: Data, publicKeyRef: Data) throws","type":"init"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/init(type:privatekeydata:)","title":"init(type: SecKeyType, privateKeyData: Data) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/privatekey","title":"let privateKey: SecKey","type":"property"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/publickey","title":"let publicKey: SecKey","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/delete()","title":"func delete() throws","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/encodedprivatekey()","title":"func encodedPrivateKey() throws -> Data","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/encodedpublickey()","title":"func encodedPublicKey() throws -> Data","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/export(password:derivedkeylength:keyderivationtiming:)","title":"func export(password: String, derivedKeyLength: Int, keyDerivationTiming: TimeInterval) throws -> Data","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/matchescertificate(certificate:trustedcertificates:)-3yhwv","title":"func matchesCertificate(certificate: SecCertificate, trustedCertificates: [SecCertificate]) throws -> Bool","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/matchescertificate(certificate:trustedcertificates:)-75qr5","title":"func matchesCertificate(certificate: SecCertificate, trustedCertificates: [SecCertificate]) async throws -> Bool","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/persistentreferences()","title":"func persistentReferences() throws -> (Data, Data)","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/save()","title":"func save() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportderivedkeylengthdefault","title":"static let exportDerivedKeyLengthDefault: Int","type":"property"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/exportkeyderivationtimingdefault","title":"static let exportKeyDerivationTimingDefault: TimeInterval","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/import(fromdata:withpassword:)","title":"static func `import`(fromData: Data, withPassword: String) throws -> SecKeyPair","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/failedtocopypublickeyfromprivatekey","title":"case failedToCopyPublicKeyFromPrivateKey","type":"case"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/generatefailed","title":"case generateFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/itemaddfailed","title":"case itemAddFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/itemdeletefailed","title":"case itemDeleteFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/nomatchingkey","title":"case noMatchingKey","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/status","title":"var status: OSStatus?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/build(error:message:status:)","title":"static func build(error: Error, message: String, status: OSStatus) -> NSError","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/error\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/error","title":"SecKeyPair.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeypair\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldsecurity\/seckeypair\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/shieldsecurity\/seckeypair","title":"SecKeyPair","type":"struct"},{"title":"ShieldCrypto","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/init(rawvalue:name:)","title":"init(rawValue: CCAlgorithm, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/blocksize","title":"var blockSize: Int","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/keysizes","title":"var keySizes: [Int]","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/rawvalue","title":"let rawValue: CCAlgorithm","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/aes","title":"static let aes: Cryptor.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/allcases","title":"static let allCases: [Algorithm]","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/blowfish","title":"static let blowfish: Cryptor.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/cast","title":"static let cast: Cryptor.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/des","title":"static let des: Cryptor.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/rc2","title":"static let rc2: Cryptor.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/rc4","title":"static let rc4: Cryptor.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/tripledes","title":"static let tripleDES: Cryptor.Algorithm","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/cryptor\/algorithm","title":"Cryptor.Algorithm","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/init(rawvalue:)","title":"init(rawValue: CCOperation)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/rawvalue","title":"let rawValue: CCOperation","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/decrypt","title":"static let decrypt: Cryptor.Operation","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/encrypt","title":"static let encrypt: Cryptor.Operation","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldcrypto\/cryptor\/operation\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/cryptor\/operation","title":"Cryptor.Operation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/init(rawvalue:)","title":"init(rawValue: CCOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/rawvalue","title":"var rawValue: CCOptions","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/ecbmode","title":"static let ecbMode: Cryptor.Options","type":"property"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/pkcs7padding","title":"static let pkcs7Padding: Cryptor.Options","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/cryptor\/options\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/shieldcrypto\/cryptor\/options\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldcrypto\/cryptor\/options\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/options\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/shieldcrypto\/cryptor\/options\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/cryptor\/options","title":"Cryptor.Options","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/init(_:using:options:key:iv:)","title":"init(Operation, using: Algorithm, options: Options, key: Data, iv: Data) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/blocksize","title":"let blockSize: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/final()","title":"func final() throws -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/final(into:)","title":"func final(into: inout Data) throws -> Int","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/final(out:)","title":"func final(out: UnsafeMutableRawBufferPointer) throws -> Int","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/final(out:outlength:)","title":"func final(out: UnsafeMutableRawPointer, outLength: Int) throws -> Int","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/process(data:)","title":"func process(data: Data) throws -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/reset(iv:)","title":"func reset(iv: Data) throws","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/totallength(forinput:)","title":"func totalLength(forInput: Int) -> Int","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/update(data:)","title":"func update(data: Data) throws -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/update(data:into:)","title":"func update(data: Data, into: inout Data) throws -> Int","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/update(in:inlength:out:outlength:)","title":"func update(in: UnsafeRawPointer, inLength: Int, out: UnsafeMutableRawPointer, outLength: Int) throws -> Int","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/update(in:out:)","title":"func update(in: UnsafeRawBufferPointer, out: UnsafeMutableRawBufferPointer) throws -> Int","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/updatelength(forinput:)","title":"func updateLength(forInput: Int) -> Int","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/cryptor\/crypt(_:operation:using:options:key:iv:)","title":"static func crypt(Data, operation: Operation, using: Algorithm, options: Options, key: Data, iv: Data) throws -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/decrypt(data:using:options:key:iv:)","title":"static func decrypt(data: Data, using: Algorithm, options: Options, key: Data, iv: Data) throws -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/cryptor\/encrypt(data:using:options:key:iv:)","title":"static func encrypt(data: Data, using: Algorithm, options: Options, key: Data, iv: Data) throws -> Data","type":"method"}],"path":"\/documentation\/shieldcrypto\/cryptor","title":"Cryptor","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/init(rawvalue:name:)","title":"init(rawValue: CCHmacAlgorithm, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/hashbytelength","title":"var hashByteLength: Int","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/rawvalue","title":"let rawValue: CCHmacAlgorithm","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/allcases","title":"static let allCases: [Algorithm]","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/md5","title":"static let md5: HMAC.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/sha1","title":"static let sha1: HMAC.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/sha224","title":"static let sha224: HMAC.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/sha256","title":"static let sha256: HMAC.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/sha384","title":"static let sha384: HMAC.Algorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/sha512","title":"static let sha512: HMAC.Algorithm","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/hmac\/algorithm\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/hmac\/algorithm","title":"HMAC.Algorithm","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/hmac\/init(_:key:)","title":"init(Algorithm, key: Data)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/hmac\/final()","title":"func final() -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/hmac\/reset(key:)","title":"func reset(key: Data)","type":"method"},{"path":"\/documentation\/shieldcrypto\/hmac\/update(data:)-9bzdo","title":"func update(data: UnsafeRawBufferPointer)","type":"method"},{"path":"\/documentation\/shieldcrypto\/hmac\/update(data:)-9ln92","title":"func update(data: Data)","type":"method"},{"path":"\/documentation\/shieldcrypto\/hmac\/update(data:datalength:)","title":"func update(data: UnsafeRawPointer, dataLength: Int)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/hmac\/hmac(_:using:key:)","title":"static func hmac(Data, using: Algorithm, key: Data) -> Data","type":"method"}],"path":"\/documentation\/shieldcrypto\/hmac","title":"HMAC","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm\/init(rawvalue:name:)","title":"init(rawValue: CCPBKDFAlgorithm, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm\/rawvalue","title":"let rawValue: CCPBKDFAlgorithm","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm\/allcases","title":"static let allCases: [Algorithm]","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm\/pbkdf2","title":"static let pbkdf2: PBKDF.Algorithm","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/pbkdf\/algorithm","title":"PBKDF.Algorithm","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/init(rawvalue:name:)","title":"init(rawValue: CCPBKDFAlgorithm, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/rawvalue","title":"let rawValue: CCPseudoRandomAlgorithm","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/allcases","title":"static let allCases: [PsuedoRandomAlgorithm]","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/sha1","title":"static let sha1: PBKDF.PsuedoRandomAlgorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/sha224","title":"static let sha224: PBKDF.PsuedoRandomAlgorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/sha256","title":"static let sha256: PBKDF.PsuedoRandomAlgorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/sha384","title":"static let sha384: PBKDF.PsuedoRandomAlgorithm","type":"property"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/sha512","title":"static let sha512: PBKDF.PsuedoRandomAlgorithm","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/pbkdf\/psuedorandomalgorithm","title":"PBKDF.PsuedoRandomAlgorithm","type":"struct"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/calibrate(passwordlength:saltlength:keylength:using:psuedorandomalgorithm:taking:)","title":"static func calibrate(passwordLength: Int, saltLength: Int, keyLength: Int, using: Algorithm, psuedoRandomAlgorithm: PsuedoRandomAlgorithm, taking: TimeInterval) throws -> Int","type":"method"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/derive(length:from:salt:using:psuedorandomalgorithm:rounds:)","title":"static func derive(length: Int, from: Data, salt: Data, using: Algorithm, psuedoRandomAlgorithm: PsuedoRandomAlgorithm, rounds: Int) throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/error\/calibrationfailed","title":"case calibrationFailed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/pbkdf\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/pbkdf\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldcrypto\/pbkdf\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/pbkdf\/error","title":"PBKDF.Error","type":"enum"}],"path":"\/documentation\/shieldcrypto\/pbkdf","title":"PBKDF","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/random\/generate(count:)","title":"static func generate(count: Int) throws -> Data","type":"method"}],"path":"\/documentation\/shieldcrypto\/random","title":"Random","type":"enum"},{"path":"\/documentation\/shieldcrypto\/sha1digester","title":"SHA1Digester","type":"typealias"},{"path":"\/documentation\/shieldcrypto\/sha224digester","title":"SHA224Digester","type":"typealias"},{"path":"\/documentation\/shieldcrypto\/sha256digester","title":"SHA256Digester","type":"typealias"},{"path":"\/documentation\/shieldcrypto\/sha384digester","title":"SHA384Digester","type":"typealias"},{"path":"\/documentation\/shieldcrypto\/sha512digester","title":"SHA512Digester","type":"typealias"},{"title":"ShieldX509","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/certificate\/init(tbscertificate:signaturealgorithm:signature:)","title":"init(tbsCertificate: TBSCertificate, signatureAlgorithm: AlgorithmIdentifier, signature: BitString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/signature","title":"var signature: BitString","type":"property"},{"path":"\/documentation\/shieldx509\/certificate\/signaturealgorithm","title":"var signatureAlgorithm: AlgorithmIdentifier","type":"property"},{"path":"\/documentation\/shieldx509\/certificate\/tbscertificate","title":"var tbsCertificate: TBSCertificate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/sec()","title":"func sec() throws -> SecCertificate?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/certificate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/encoded()","title":"func encoded() throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/asn1schema","title":"static var asn1Schema: Schema","type":"property"}],"path":"\/documentation\/shieldx509\/certificate\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/certificate","title":"Certificate","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/init(serialnumber:issuer:issueruniqueid:subject:subjectuniqueid:subjectpublickeyinfo:notbefore:notafter:extensions:)","title":"init(serialNumber: TBSCertificate.SerialNumber?, issuer: Name?, issuerUniqueID: TBSCertificate.UniqueIdentifier?, subject: Name?, subjectUniqueID: TBSCertificate.UniqueIdentifier?, subjectPublicKeyInfo: SubjectPublicKeyInfo?, notBefore: AnyTime?, notAfter: AnyTime?, extensions: Extensions?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/addextension(_:)","title":"func addExtension(Extension) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/addextension(value:)-3f08l","title":"func addExtension<Value>(value: Value) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/addextension(value:)-9cszy","title":"func addExtension<Value>(value: Value) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/addextension(value:iscritical:)","title":"func addExtension<Value>(value: Value, isCritical: Bool) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/addissueralternativenames(names:)-2wrhm","title":"func addIssuerAlternativeNames(names: GeneralNames) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/addissueralternativenames(names:)-6be75","title":"func addIssuerAlternativeNames(names: GeneralName...) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/addsubjectalternativenames(names:)-7zegi","title":"func addSubjectAlternativeNames(names: GeneralNames) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/addsubjectalternativenames(names:)-eu3j","title":"func addSubjectAlternativeNames(names: GeneralName...) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/authoritykeyidentifier(_:certissuer:certserialnumber:)","title":"func authorityKeyIdentifier(KeyIdentifier, certIssuer: GeneralNames?, certSerialNumber: TBSCertificate.SerialNumber?) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/basicconstraints(ca:pathlength:)","title":"func basicConstraints(ca: Bool, pathLength: Int?) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/build(signingkey:digestalgorithm:)","title":"func build(signingKey: SecKey, digestAlgorithm: Digester.Algorithm) throws -> Certificate","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/buildinfo(signaturealgorithm:)","title":"func buildInfo(signatureAlgorithm: AlgorithmIdentifier) throws -> TBSCertificate","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/computesubjectkeyidentifier()","title":"func computeSubjectKeyIdentifier() throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/extendedkeyusage(keypurposes:iscritical:)","title":"func extendedKeyUsage(keyPurposes: Set<OID>, isCritical: Bool) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/issuer(name:uniqueid:)","title":"func issuer(name: Name, uniqueID: TBSCertificate.UniqueIdentifier?) -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/issueralternativenames(names:)-3mu7v","title":"func issuerAlternativeNames(names: GeneralNames) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/issueralternativenames(names:)-9018z","title":"func issuerAlternativeNames(names: GeneralName...) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/publickey(_:algorithm:usage:)","title":"func publicKey(BitString, algorithm: AlgorithmIdentifier, usage: KeyUsage?) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/publickey(keypair:usage:)","title":"func publicKey(keyPair: SecKeyPair, usage: KeyUsage?) throws -> Certificate.Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/publickey(publickey:usage:)","title":"func publicKey(publicKey: SecKey, usage: KeyUsage?) throws -> Certificate.Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/request(_:)-13wjn","title":"func request(CertificationRequestInfo) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/request(_:)-6846g","title":"func request(CertificationRequest) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/serialnumber(_:)","title":"func serialNumber(TBSCertificate.SerialNumber) -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/subject(name:uniqueid:)","title":"func subject(name: Name, uniqueID: TBSCertificate.UniqueIdentifier?) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/subjectalternativenames(names:)-62seq","title":"func subjectAlternativeNames(names: GeneralName...) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/subjectalternativenames(names:)-6ee33","title":"func subjectAlternativeNames(names: GeneralNames) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/subjectkeyidentifier(_:)","title":"func subjectKeyIdentifier(KeyIdentifier) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/subjectuniqueid(_:)","title":"func subjectUniqueID(TBSCertificate.UniqueIdentifier) -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/valid(for:)","title":"func valid(for: TimeInterval) -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/valid(from:to:)","title":"func valid(from: Date, to: Date) -> Builder","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/defaultvaliditybeforeallowance","title":"static let defaultValidityBeforeAllowance: TimeInterval","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/randomserialnumber()","title":"static func randomSerialNumber() throws -> ASN1.Integer","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/error\/missingparameter(_:)","title":"case missingParameter(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificate\/builder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldx509\/certificate\/builder\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/certificate\/builder\/error","title":"Certificate.Builder.Error","type":"enum"}],"path":"\/documentation\/shieldx509\/certificate\/builder","title":"Certificate.Builder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/init(certificationrequestinfo:signaturealgorithm:signature:)","title":"init(certificationRequestInfo: CertificationRequestInfo, signatureAlgorithm: AlgorithmIdentifier, signature: Data)","type":"init"},{"path":"\/documentation\/shieldx509\/certificationrequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/certificationrequestinfo","title":"var certificationRequestInfo: CertificationRequestInfo","type":"property"},{"path":"\/documentation\/shieldx509\/certificationrequest\/signature","title":"var signature: Data","type":"property"},{"path":"\/documentation\/shieldx509\/certificationrequest\/signaturealgorithm","title":"var signatureAlgorithm: AlgorithmIdentifier","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/certificationrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/encoded()","title":"func encoded() throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/asn1schema","title":"static var asn1Schema: Schema","type":"property"}],"path":"\/documentation\/shieldx509\/certificationrequest\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/certificationrequest","title":"CertificationRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/init(subject:subjectpkinfo:attributes:)","title":"init(subject: Name?, subjectPKInfo: SubjectPublicKeyInfo?, attributes: CRAttributes?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/addalternativenames(names:)-faws","title":"func addAlternativeNames(names: GeneralName...) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/addalternativenames(names:)-kexi","title":"func addAlternativeNames(names: GeneralNames) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/alternativenames(names:)-1uzei","title":"func alternativeNames(names: GeneralNames) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/alternativenames(names:)-93l1o","title":"func alternativeNames(names: GeneralName...) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/build(signingkey:digestalgorithm:)","title":"func build(signingKey: SecKey, digestAlgorithm: Digester.Algorithm) throws -> CertificationRequest","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/buildinfo()","title":"func buildInfo() throws -> CertificationRequestInfo","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/extendedkeyusage(keypurposes:iscritical:)","title":"func extendedKeyUsage(keyPurposes: Set<OID>, isCritical: Bool) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/extension(_:)","title":"func `extension`(Extension) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/publickey(_:algorithm:usage:)","title":"func publicKey(BitString, algorithm: AlgorithmIdentifier, usage: KeyUsage?) throws -> Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/publickey(keypair:usage:)","title":"func publicKey(keyPair: SecKeyPair, usage: KeyUsage?) throws -> CertificationRequest.Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/publickey(publickey:usage:)","title":"func publicKey(publicKey: SecKey, usage: KeyUsage?) throws -> CertificationRequest.Builder","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/subject(name:)","title":"func subject(name: Name) throws -> Builder","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/error\/missingparameter(_:)","title":"case missingParameter(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/certificationrequest\/builder\/error","title":"CertificationRequest.Builder.Error","type":"enum"}],"path":"\/documentation\/shieldx509\/certificationrequest\/builder","title":"CertificationRequest.Builder","type":"struct"},{"path":"\/documentation\/shieldx509\/namebuilder","title":"NameBuilder","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/basicconstraints\/init(ca:pathlenconstraint:)","title":"init(ca: Bool, pathLenConstraint: Int?)","type":"init"},{"path":"\/documentation\/shieldx509\/basicconstraints\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/basicconstraints\/ca","title":"var ca: Bool","type":"property"},{"path":"\/documentation\/shieldx509\/basicconstraints\/pathlenconstraint","title":"var pathLenConstraint: Int?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/basicconstraints\/asn1schema","title":"static let asn1Schema: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/basicconstraints\/extensionid","title":"static let extensionID: OID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/basicconstraints\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/basicconstraints\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/basicconstraints\/encoded()","title":"func encoded() throws -> Data","type":"method"}],"path":"\/documentation\/shieldx509\/basicconstraints\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/basicconstraints","title":"BasicConstraints","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/init(rawvalue:)","title":"init(rawValue: UInt16)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/rawvalue","title":"let rawValue: UInt16","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/asn1schema","title":"static var asn1Schema: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/crlsign","title":"static let cRLSign: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/contentcommitment","title":"static let contentCommitment: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/dataencipherment","title":"static let dataEncipherment: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/decipheronly","title":"static let decipherOnly: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/digitalsignature","title":"static let digitalSignature: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/encipheronly","title":"static let encipherOnly: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/extensionid","title":"static var extensionID: OID","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/keyagreement","title":"static let keyAgreement: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/keycertsign","title":"static let keyCertSign: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/keyencipherment","title":"static let keyEncipherment: KeyUsage","type":"property"},{"path":"\/documentation\/shieldx509\/keyusage\/nonrepudiation","title":"static let nonRepudiation: KeyUsage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/init(from:)-3k45o","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx509\/keyusage\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx509\/keyusage\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/keyusage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/shieldx509\/keyusage\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/init(from:)-6d9pw","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldx509\/keyusage\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/encoded()","title":"func encoded() throws -> Data","type":"method"}],"path":"\/documentation\/shieldx509\/keyusage\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/shieldx509\/keyusage\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/keyusage\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/shieldx509\/keyusage\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/shieldx509\/keyusage\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/keyusage","title":"KeyUsage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extkeyusage\/init(keypurposes:)","title":"init(keyPurposes: Set<OID>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extkeyusage\/keypurposes","title":"var keyPurposes: Set<OID>","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extkeyusage\/asn1schema","title":"static var asn1Schema: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/extkeyusage\/extensionid","title":"static var extensionID: OID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extkeyusage\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx509\/extkeyusage\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extkeyusage\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx509\/extkeyusage\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extkeyusage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/extkeyusage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extkeyusage\/encoded()","title":"func encoded() throws -> Data","type":"method"}],"path":"\/documentation\/shieldx509\/extkeyusage\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/extkeyusage","title":"ExtKeyUsage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/init(value:)","title":"init(value: KeyIdentifier)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/value","title":"var value: KeyIdentifier","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/asn1schema","title":"static let asn1Schema: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/extensionid","title":"static let extensionID: OID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/encoded()","title":"func encoded() throws -> Data","type":"method"}],"path":"\/documentation\/shieldx509\/subjectkeyidentifier\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/subjectkeyidentifier","title":"SubjectKeyIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/init(keyidentifier:authoritycertissuer:authoritycertserialnumber:)","title":"init(keyIdentifier: KeyIdentifier?, authorityCertIssuer: GeneralNames?, authorityCertSerialNumber: TBSCertificate.SerialNumber?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/authoritycertissuer","title":"var authorityCertIssuer: GeneralNames?","type":"property"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/authoritycertserialnumber","title":"var authorityCertSerialNumber: TBSCertificate.SerialNumber?","type":"property"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/keyidentifier","title":"var keyIdentifier: KeyIdentifier?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/asn1schema","title":"static let asn1Schema: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/extensionid","title":"static let extensionID: OID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/encoded()","title":"func encoded() throws -> Data","type":"method"}],"path":"\/documentation\/shieldx509\/authoritykeyidentifier\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/authoritykeyidentifier","title":"AuthorityKeyIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectaltname\/init(names:)","title":"init(names: GeneralNames)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectaltname\/names","title":"var names: GeneralNames","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectaltname\/asn1schema","title":"static let asn1Schema: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/subjectaltname\/extensionid","title":"static let extensionID: OID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectaltname\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx509\/subjectaltname\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectaltname\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx509\/subjectaltname\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectaltname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/subjectaltname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectaltname\/encoded()","title":"func encoded() throws -> Data","type":"method"}],"path":"\/documentation\/shieldx509\/subjectaltname\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/subjectaltname","title":"SubjectAltName","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/issueraltname\/init(names:)","title":"init(names: GeneralNames)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/issueraltname\/names","title":"var names: GeneralNames","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/issueraltname\/asn1schema","title":"static let asn1Schema: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/issueraltname\/extensionid","title":"static let extensionID: OID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/issueraltname\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx509\/issueraltname\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/issueraltname\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx509\/issueraltname\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/issueraltname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/issueraltname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/issueraltname\/encoded()","title":"func encoded() throws -> Data","type":"method"}],"path":"\/documentation\/shieldx509\/issueraltname\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/issueraltname","title":"IssuerAltName","type":"struct"},{"title":"ShieldX500","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/init(rdns:style:)","title":"init(rdns: [RDN], style: NamingStyle)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/name","title":"var name: RDNSequence<Mapper>","type":"property"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/rdns","title":"var rdns: RDNSequence<Mapper>","type":"property"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/style","title":"let style: NamingStyle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/add(_:fortype:)-14u1p","title":"func add(String, forType: OID) -> DistinguishedNameBuilder<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/add(_:fortype:)-7tkp","title":"func add(AnyString, forType: OID) -> DistinguishedNameBuilder<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/add(_:fortypename:)","title":"func add(String, forTypeName: String) throws -> DistinguishedNameBuilder<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/add(multivalued:)-2mxq2","title":"func add(multiValued: (typeName: String, value: String)...) throws -> DistinguishedNameBuilder<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/add(multivalued:)-2unqw","title":"func add(multiValued: [(type: OID, value: AnyString)]) -> DistinguishedNameBuilder<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/add(multivalued:)-7x03i","title":"func add(multiValued: (type: OID, value: AnyString)...) -> DistinguishedNameBuilder<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/add(multivalued:)-841mf","title":"func add(multiValued: [(typeName: String, value: String)]) throws -> DistinguishedNameBuilder<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/add(parsed:)","title":"func add(parsed: String) throws -> DistinguishedNameBuilder<Mapper>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/atv","title":"DistinguishedNameBuilder.ATV","type":"typealias"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/rdn","title":"DistinguishedNameBuilder.RDN","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/parse(string:style:)","title":"static func parse(string: String, style: NamingStyle) throws -> RDNSequence<Mapper>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/error\/unknowntypename(name:style:)","title":"case unknownTypeName(name: String, style: NamingStyle)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldx500\/distinguishednamebuilder\/error","title":"DistinguishedNameBuilder.Error","type":"enum"}],"path":"\/documentation\/shieldx500\/distinguishednamebuilder","title":"DistinguishedNameBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/init(rdnstrings:style:)","title":"init(rdnStrings: [String], style: NamingStyle)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/rdnstrings","title":"let rdnStrings: [String]","type":"property"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/style","title":"let style: NamingStyle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/append(_:)","title":"func append(AttributeTypeAndValue<Mapper>) throws -> DistinguishedNameStringComposer<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/append(_:fortype:)","title":"func append(Any, forType: OID) throws -> DistinguishedNameStringComposer<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/append(rdn:)","title":"func append(rdn: RelativeDistinguishedName<Mapper>) throws -> DistinguishedNameStringComposer<Mapper>","type":"method"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/append(rdnsequence:)","title":"func append(rdnSequence: RDNSequence<Mapper>) throws -> DistinguishedNameStringComposer<Mapper>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/compose(_:style:)","title":"static func compose(RDNSequence<Mapper>, style: NamingStyle) throws -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/error\/attributeencodingerror(_:)","title":"case attributeEncodingError(Swift.Error)","type":"case"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/error\/unsupportedattributetype(_:)","title":"case unsupportedAttributeType(OID)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer\/error","title":"DistinguishedNameStringComposer.Error","type":"enum"}],"path":"\/documentation\/shieldx500\/distinguishednamestringcomposer","title":"DistinguishedNameStringComposer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringparser\/init(style:separators:)","title":"init(style: NamingStyle, separators: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringparser\/separators","title":"let separators: String","type":"property"},{"path":"\/documentation\/shieldx500\/distinguishednamestringparser\/style","title":"let style: NamingStyle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringparser\/parse(string:)","title":"func parse(string: String) throws -> RDNSequence<Mapper>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringparser\/error\/badformat(_:)","title":"case badFormat(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/distinguishednamestringparser\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldx500\/distinguishednamestringparser\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldx500\/distinguishednamestringparser\/error","title":"DistinguishedNameStringParser.Error","type":"enum"}],"path":"\/documentation\/shieldx500\/distinguishednamestringparser","title":"DistinguishedNameStringParser","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/rfc4519style\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/rfc4519style\/name(fromoid:)","title":"func name(fromOID: OID) -> String?","type":"method"},{"path":"\/documentation\/shieldx500\/rfc4519style\/oid(fromname:)","title":"func oid(fromName: String) -> OID?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/rfc4519style\/instance","title":"static let instance: NamingStyle","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/rfc4519style\/decode(attributename:mapping:)","title":"static func decode(attributeName: String, mapping: [String : OID]) -> OID?","type":"method"}],"path":"\/documentation\/shieldx500\/rfc4519style\/namingstyleprotocol-implementations","title":"NamingStyleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/shieldx500\/rfc4519style","title":"RFC4519Style","type":"struct"},{"title":"ShieldOID","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/names","title":"static let names: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/aacertificate","title":"case aaCertificate","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/aliasedentryname","title":"case aliasedEntryName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/attributeauthorityrevocationlist","title":"case attributeAuthorityRevocationList","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/attributecertificate","title":"case attributeCertificate","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/attributecertificaterevocationlist","title":"case attributeCertificateRevocationList","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/attributedescriptorcertificate","title":"case attributeDescriptorCertificate","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/attributeintegrityinfo","title":"case attributeIntegrityInfo","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/authorityrevocationlist","title":"case authorityRevocationList","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/businesscategory","title":"case businessCategory","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/cacertificate","title":"case caCertificate","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/certificatepolicy","title":"case certificatePolicy","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/certificaterevocationlist","title":"case certificateRevocationList","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/certificationpracticestmt","title":"case certificationPracticeStmt","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/clearance","title":"case clearance","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/commonname","title":"case commonName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/communicationsnetwork","title":"case communicationsNetwork","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/communicationsservice","title":"case communicationsService","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/confkeyinfo","title":"case confKeyInfo","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/contenturl","title":"case contentUrl","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/countryname","title":"case countryName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/crosscertificatepair","title":"case crossCertificatePair","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/defaultdirqop","title":"case defaultDirQop","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/delegationpath","title":"case delegationPath","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/deltarevocationlist","title":"case deltaRevocationList","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/description","title":"case description","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/destinationindicator","title":"case destinationIndicator","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/distinguishedname","title":"case distinguishedName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/dmdname","title":"case dmdName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/dnqualifier","title":"case dnQualifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/enhancedsearchguide","title":"case enhancedSearchGuide","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/epc","title":"case epc","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/epcformat","title":"case epcFormat","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/epcinurn","title":"case epcInUrn","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/facsimiletelephonenumber","title":"case facsimileTelephoneNumber","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/family","title":"case family","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/generationqualifier","title":"case generationQualifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/givenname","title":"case givenName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/houseidentifier","title":"case houseIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/initials","title":"case initials","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/internationalisdnnumber","title":"case internationalISDNNumber","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/knowledgeinformation","title":"case knowledgeInformation","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/ldapurl","title":"case ldapUrl","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/localityname","title":"case localityName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/member","title":"case member","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/name","title":"case name","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/objectclass","title":"case objectClass","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/organizationidentifier","title":"case organizationIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/organizationname","title":"case organizationName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/organizationalunitname","title":"case organizationalUnitName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/owner","title":"case owner","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/permission","title":"case permission","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/physicaldeliveryofficename","title":"case physicalDeliveryOfficeName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/pkipath","title":"case pkiPath","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/postofficebox","title":"case postOfficeBox","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/postaladdress","title":"case postalAddress","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/postalcode","title":"case postalCode","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/preferreddeliverymethod","title":"case preferredDeliveryMethod","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/presentationaddress","title":"case presentationAddress","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/privpolicy","title":"case privPolicy","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/protprivpolicy","title":"case protPrivPolicy","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/protocolinformation","title":"case protocolInformation","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/pseudonym","title":"case pseudonym","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/pwdattribute","title":"case pwdAttribute","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/registeredaddress","title":"case registeredAddress","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/role","title":"case role","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/roleoccupant","title":"case roleOccupant","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/searchguide","title":"case searchGuide","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/seealso","title":"case seeAlso","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/serialnumber","title":"case serialNumber","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/stateorprovincename","title":"case stateOrProvinceName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/streetaddress","title":"case streetAddress","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/supportedalgorithms","title":"case supportedAlgorithms","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/supportedapplicationcontext","title":"case supportedApplicationContext","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/surname","title":"case surname","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/tagafi","title":"case tagAfi","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/taglocation","title":"case tagLocation","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/tagoid","title":"case tagOid","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/telephonenumber","title":"case telephoneNumber","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/teletexterminalidentifier","title":"case teletexTerminalIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/telexnumber","title":"case telexNumber","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/title","title":"case title","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/uii","title":"case uii","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/uiiformat","title":"case uiiFormat","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/uiiinurh","title":"case uiiInUrh","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/uniqueidentifier","title":"case uniqueIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/uniquemember","title":"case uniqueMember","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/uri","title":"case uri","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/url","title":"case url","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/urn","title":"case urn","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/urnc","title":"case urnC","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/usercertificate","title":"case userCertificate","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/userpassword","title":"case userPassword","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/userpwd","title":"case userPwd","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/utmcoordinates","title":"case utmCoordinates","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/uuidpair","title":"case uuidpair","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/x121address","title":"case x121Address","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/xmlprivpolicy","title":"case xmlPrivPolicy","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/xmlprivilegeinfo","title":"case xmlPrivilegeInfo","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso_itu\/ds\/attributetype","title":"iso_itu.ds.attributeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/acceptablecertpolicies","title":"case acceptableCertPolicies","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/acceptableprivilegepolicies","title":"case acceptablePrivilegePolicies","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/attributedescriptor","title":"case attributeDescriptor","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/authorityattributeidentifier","title":"case authorityAttributeIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/authoritykeyidentifier","title":"case authorityKeyIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/baseupdatetime","title":"case baseUpdateTime","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/basicattconstraints","title":"case basicAttConstraints","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/basicconstraints","title":"case basicConstraints","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/certificateissuer","title":"case certificateIssuer","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/certificatepolicies","title":"case certificatePolicies","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/crldistributionpoints","title":"case crlDistributionPoints","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/crlnumber","title":"case crlNumber","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/crlscope","title":"case crlScope","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/crlstreamidentifier","title":"case crlStreamIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/delegatednameconstraints","title":"case delegatedNameConstraints","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/deltacrlindicator","title":"case deltaCRLIndicator","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/deltainfo","title":"case deltaInfo","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/expirationdate","title":"case expirationDate","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/extkeyusage","title":"case extKeyUsage","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/freshestcrl","title":"case freshestCRL","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/inhibitanypolicy","title":"case inhibitAnyPolicy","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/instructioncode","title":"case instructionCode","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/invaliditydate","title":"case invalidityDate","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/issueraltname","title":"case issuerAltName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/issuingdistributionpoint","title":"case issuingDistributionPoint","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/keyattributes","title":"case keyAttributes","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/keyusage","title":"case keyUsage","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/keyusagerestriction","title":"case keyUsageRestriction","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/nameconstraints","title":"case nameConstraints","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/norevavail","title":"case noRevAvail","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/orderedlist","title":"case orderedList","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/policyconstraints","title":"case policyConstraints","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/policymapping","title":"case policyMapping","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/policymappings","title":"case policyMappings","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/privatekeyusageperiod","title":"case privateKeyUsagePeriod","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/reasoncode","title":"case reasonCode","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/rolespeccertidentifier","title":"case roleSpecCertIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/soaidentifier","title":"case soaIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/statusreferrals","title":"case statusReferrals","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/subjectaltname","title":"case subjectAltName","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/subjectdirectoryattributes","title":"case subjectDirectoryAttributes","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/subjectkeyidentifier","title":"case subjectKeyIdentifier","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/subtreesconstraint","title":"case subtreesConstraint","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/targetinformation","title":"case targetInformation","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/timespecification","title":"case timeSpecification","type":"case"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/usernotice","title":"case userNotice","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso_itu\/ds\/certificateextension","title":"iso_itu.ds.certificateExtension","type":"enum"}],"path":"\/documentation\/shieldoid\/iso_itu\/ds","title":"iso_itu.ds","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso_itu\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso_itu\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso_itu","title":"iso_itu","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/names","title":"static let names: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2onb191v4","title":"case c2onb191v4","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2onb191v5","title":"case c2onb191v5","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2onb239v4","title":"case c2onb239v4","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2onb239v5","title":"case c2onb239v5","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2pnb163v1","title":"case c2pnb163v1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2pnb163v2","title":"case c2pnb163v2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2pnb163v3","title":"case c2pnb163v3","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2pnb176w1","title":"case c2pnb176w1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2pnb208w1","title":"case c2pnb208w1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2pnb272w1","title":"case c2pnb272W1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2pnb304w1","title":"case c2pnb304W1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2pnb368w1","title":"case c2pnb368w1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2tnb191v1","title":"case c2tnb191v1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2tnb191v2","title":"case c2tnb191v2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2tnb191v3","title":"case c2tnb191v3","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2tnb239v1","title":"case c2tnb239v1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2tnb239v2","title":"case c2tnb239v2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2tnb239v3","title":"case c2tnb239v3","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2tnb359v1","title":"case c2tnb359v1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/c2tnb431r1","title":"case c2tnb431r1","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/characteristictwo","title":"iso.memberBody.us.ansix962.curves.characteristicTwo","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/prime192v1","title":"case prime192v1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/prime192v2","title":"case prime192v2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/prime192v3","title":"case prime192v3","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/prime239v1","title":"case prime239v1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/prime239v2","title":"case prime239v2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/prime239v3","title":"case prime239v3","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/prime256v1","title":"case prime256v1","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves\/prime","title":"iso.memberBody.us.ansix962.curves.prime","type":"enum"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/curves","title":"iso.memberBody.us.ansix962.curves","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/names","title":"static let names: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/ecpublickey","title":"case ecPublicKey","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/keytype","title":"iso.memberBody.us.ansix962.keyType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithrecommended","title":"case ecdsaWithRecommended","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha1","title":"case ecdsaWithSHA1","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/names","title":"static let names: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/ecdsawithsha224","title":"case ecdsaWithSHA224","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/ecdsawithsha256","title":"case ecdsaWithSHA256","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/ecdsawithsha384","title":"case ecdsaWithSHA384","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/ecdsawithsha512","title":"case ecdsaWithSHA512","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/ecdsawithsha2","title":"iso.memberBody.us.ansix962.signatures.ecdsaWithSHA2","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962\/signatures","title":"iso.memberBody.us.ansix962.signatures","type":"enum"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/ansix962","title":"iso.memberBody.us.ansix962","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/names","title":"static let names: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/md2withrsaencryption","title":"case md2WithRSAEncryption","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/md4withrsaencryption","title":"case md4WithRSAEncryption","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/md5withrsaencryption","title":"case md5WithRSAEncryption","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/rsaencryption","title":"case rsaEncryption","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/sha1withrsasignature","title":"case sha1WithRSASignature","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/sha224withrsaencryption","title":"case sha224WithRSAEncryption","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/sha256withrsaencryption","title":"case sha256WithRSAEncryption","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/sha384withrsaencryption","title":"case sha384WithRSAEncryption","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/sha512withrsaencryption","title":"case sha512WithRSAEncryption","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs1","title":"iso.memberBody.us.rsadsi.pkcs.pkcs1","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/challengepassword","title":"case challengePassword","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/contenttype","title":"case contentType","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/countersignature","title":"case counterSignature","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/emailaddress","title":"case emailAddress","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/extendedcertificateattributes","title":"case extendedCertificateAttributes","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/extensionrequest","title":"case extensionRequest","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/messagedigest","title":"case messageDigest","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/signingtime","title":"case signingTime","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/unstructuredaddress","title":"case unstructuredAddress","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/unstructuredname","title":"case unstructuredName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs\/pkcs9","title":"iso.memberBody.us.rsadsi.pkcs.pkcs9","type":"enum"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/pkcs","title":"iso.memberBody.us.rsadsi.pkcs","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/rsadsi","title":"iso.memberBody.us.rsadsi","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/us\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso\/memberbody\/us","title":"iso.memberBody.us","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/memberbody\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso\/memberbody","title":"iso.memberBody","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/names","title":"static let names: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip160k1","title":"case ansip160k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip160r1","title":"case ansip160r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip160r2","title":"case ansip160r2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip192k1","title":"case ansip192k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip224k1","title":"case ansip224k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip224r1","title":"case ansip224r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip256k1","title":"case ansip256k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip384r1","title":"case ansip384r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansip521r1","title":"case ansip521r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit163k1","title":"case ansit163k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit163r1","title":"case ansit163r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit163r2","title":"case ansit163r2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit193r1","title":"case ansit193r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit193r2","title":"case ansit193r2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit233k1","title":"case ansit233k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit233r1","title":"case ansit233r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit239k1","title":"case ansit239k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit283k1","title":"case ansit283k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit283r1","title":"case ansit283r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit409k1","title":"case ansit409k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit409r1","title":"case ansit409r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit571k1","title":"case ansit571k1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/ansit571r1","title":"case ansit571r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/secp112r1","title":"case secp112r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/secp112r2","title":"case secp112r2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/secp128r1","title":"case secp128r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/secp128r2","title":"case secp128r2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/sect113r1","title":"case sect113r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/sect113r2","title":"case sect113r2","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/sect131r1","title":"case sect131r1","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/sect131r2","title":"case sect131r2","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/curve","title":"iso.org.certicom.curve","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/dhsinglepasscofactordhrecommendedkdf","title":"case dhSinglePassCofactorDHRecommendedKDF","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/dhsinglepasscofactordhspecifiedkdf","title":"case dhSinglePassCofactorDHSpecifiedKDF","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/ecdh","title":"case ecdh","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/ecmqv","title":"case ecmqv","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/org\/certicom\/schemes","title":"iso.org.certicom.schemes","type":"enum"}],"path":"\/documentation\/shieldoid\/iso\/org\/certicom","title":"iso.org.certicom","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/names","title":"static let names: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/clientauth","title":"case clientAuth","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/codesigning","title":"case codeSigning","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/dvcs","title":"case dvcs","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/emailprotection","title":"case emailProtection","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpcapwapac","title":"case idKpCapwapAC","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpcapwapwtp","title":"case idKpCapwapWTP","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpcmcarchive","title":"case idKpCmcArchive","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpcmcca","title":"case idKpCmcCA","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpcmcra","title":"case idKpCmcRA","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpeapoverlan","title":"case idKpEapOverLAN","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpeapoverppp","title":"case idKpEapOverPPP","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpipsecike","title":"case idKpIpsecIKE","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpscvpclient","title":"case idKpScvpClient","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpscvpresponder","title":"case idKpScvpResponder","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpscvpserver","title":"case idKpScvpServer","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpsendowner","title":"case idKpSendOwner","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpsendproxiedowner","title":"case idKpSendProxiedOwner","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpsendproxy","title":"case idKpSendProxy","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpsendrouter","title":"case idKpSendRouter","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/idkpsipdomain","title":"case idKpSipDomain","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/ipsecendsystem","title":"case ipsecEndSystem","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/ipsectunnel","title":"case ipsecTunnel","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/ipsecuser","title":"case ipsecUser","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/ocspsigning","title":"case ocspSigning","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/sbgpcertaaserverauth","title":"case sbgpCertAAServerAuth","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/secureshellclient","title":"case secureShellClient","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/secureshellserver","title":"case secureShellServer","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/serverauth","title":"case serverAuth","type":"case"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/timestamping","title":"case timeStamping","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix\/kp","title":"iso.org.dod.internet.security.mechanisms.pkix.kp","type":"enum"}],"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/pkix","title":"iso.org.dod.internet.security.mechanisms.pkix","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/mechanisms","title":"iso.org.dod.internet.security.mechanisms","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/security","title":"iso.org.dod.internet.security","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso\/org\/dod\/internet","title":"iso.org.dod.internet","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/dod\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso\/org\/dod","title":"iso.org.dod","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/org\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/org\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso\/org","title":"iso.org","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/iso\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/iso\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/iso","title":"iso","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/names","title":"static let names: [String]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/domaincomponent","title":"case domainComponent","type":"case"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/userid","title":"case userId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/init(rawvalue:)","title":"init?(rawValue: OID)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/names","title":"static let names: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot\/pilotattributetype","title":"itu.data.pss.ucl.pilot.pilotAttributeType","type":"enum"}],"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/pilot","title":"itu.data.pss.ucl.pilot","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/itu\/data\/pss\/ucl","title":"itu.data.pss.ucl","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/itu\/data\/pss\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/itu\/data\/pss","title":"itu.data.pss","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/data\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/itu\/data\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/itu\/data","title":"itu.data","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/itu\/id","title":"static let id: UInt64","type":"property"},{"path":"\/documentation\/shieldoid\/itu\/names","title":"static let names: [String]","type":"property"}],"path":"\/documentation\/shieldoid\/itu","title":"itu","type":"struct"}],"path":"\/documentation\/shield","title":"Shield","type":"module"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/anydigester\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/anydigester\/final()","title":"func final() -> Data","type":"method"},{"children":[{"children":[{"path":"\/documentation\/shieldcrypto\/anydigester\/update(data:)-2if83","title":"func update(data: Data)","type":"method"},{"path":"\/documentation\/shieldcrypto\/anydigester\/update(data:)-vb2v","title":"func update(data: UnsafeRawBufferPointer)","type":"method"}],"title":"AnyDigester Implementations","type":"groupMarker"}],"path":"\/documentation\/shieldcrypto\/anydigester\/update(data:)-29cau","title":"func update(data: Data)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/shieldcrypto\/anydigester\/update(data:)-vb2v","title":"func update(data: UnsafeRawBufferPointer)","type":"method"},{"path":"\/documentation\/shieldcrypto\/anydigester\/update(data:)-2if83","title":"func update(data: Data)","type":"method"}],"title":"AnyDigester Implementations","type":"groupMarker"}],"path":"\/documentation\/shieldcrypto\/anydigester\/update(data:)-3h6bb","title":"func update(data: UnsafeRawBufferPointer)","type":"method"},{"path":"\/documentation\/shieldcrypto\/anydigester\/update(data:datalength:)","title":"func update(data: UnsafeRawPointer, dataLength: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/anydigester\/hashlength","title":"static var hashLength: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/shieldcrypto\/anydigester\/digest(data:)-1rlzo","title":"static func digest(data: Data) -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/anydigester\/digest(data:)-65jpl","title":"static func digest(data: UnsafeRawBufferPointer) -> Data","type":"method"}],"title":"AnyDigester Implementations","type":"groupMarker"}],"path":"\/documentation\/shieldcrypto\/anydigester\/digest(data:)-5bapj","title":"static func digest(data: Data) -> Data","type":"method"},{"children":[{"children":[{"path":"\/documentation\/shieldcrypto\/anydigester\/digest(data:)-65jpl","title":"static func digest(data: UnsafeRawBufferPointer) -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/anydigester\/digest(data:)-1rlzo","title":"static func digest(data: Data) -> Data","type":"method"}],"title":"AnyDigester Implementations","type":"groupMarker"}],"path":"\/documentation\/shieldcrypto\/anydigester\/digest(data:)-c3pt","title":"static func digest(data: UnsafeRawBufferPointer) -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/anydigester\/digest(data:datalength:)","title":"static func digest(data: UnsafeRawPointer, dataLength: Int) -> Data","type":"method"}],"path":"\/documentation\/shieldcrypto\/anydigester","title":"AnyDigester","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digestcontext\/init()","title":"init()","type":"init"}],"path":"\/documentation\/shieldcrypto\/digestcontext","title":"DigestContext","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digestengine\/context","title":"Context","type":"associatedtype"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digestengine\/digest-swift.typealias","title":"DigestEngine.Digest","type":"typealias"},{"path":"\/documentation\/shieldcrypto\/digestengine\/final-swift.typealias","title":"DigestEngine.Final","type":"typealias"},{"path":"\/documentation\/shieldcrypto\/digestengine\/init","title":"DigestEngine.Init","type":"typealias"},{"path":"\/documentation\/shieldcrypto\/digestengine\/update-swift.typealias","title":"DigestEngine.Update","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digestengine\/create","title":"static var create: Init","type":"property"},{"path":"\/documentation\/shieldcrypto\/digestengine\/digest-swift.type.property","title":"static var digest: Digest","type":"property"},{"path":"\/documentation\/shieldcrypto\/digestengine\/final-swift.type.property","title":"static var final: Final","type":"property"},{"path":"\/documentation\/shieldcrypto\/digestengine\/hashlength","title":"static var hashLength: Int32","type":"property"},{"path":"\/documentation\/shieldcrypto\/digestengine\/update-swift.type.property","title":"static var update: Update","type":"property"}],"path":"\/documentation\/shieldcrypto\/digestengine","title":"DigestEngine","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/ccerror\/init(rawvalue:)","title":"init(rawValue: CCCryptorStatus)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/ccerror\/rawvalue","title":"let rawValue: CCCryptorStatus","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/ccerror\/alignmenterror","title":"static let alignmentError: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/buffertoosmall","title":"static let bufferTooSmall: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/callsequenceerror","title":"static let callSequenceError: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/decodeerror","title":"static let decodeError: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/invalidkey","title":"static let invalidKey: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/keysize","title":"static let keySize: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/memoryfailure","title":"static let memoryFailure: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/overflow","title":"static let overflow: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/paramerror","title":"static let paramError: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/rngfailure","title":"static let rngFailure: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/unimplemented","title":"static let unimplemented: CCError","type":"property"},{"path":"\/documentation\/shieldcrypto\/ccerror\/unspecified","title":"static let unspecified: CCError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/ccerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/ccerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/ccerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldcrypto\/ccerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/ccerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/ccerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldcrypto\/ccerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/ccerror","title":"CCError","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digester\/digest(_:using:)","title":"static func digest(Data, using: Algorithm) -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/digester\/for(_:)","title":"static func `for`(Algorithm) -> AnyDigester","type":"method"},{"path":"\/documentation\/shieldcrypto\/digester\/type(_:)","title":"static func type(Algorithm) -> AnyDigester.Type","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/sha1","title":"case sha1","type":"case"},{"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/sha224","title":"case sha224","type":"case"},{"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/sha256","title":"case sha256","type":"case"},{"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/sha384","title":"case sha384","type":"case"},{"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/sha512","title":"case sha512","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/hashbitlength","title":"var hashBitLength: Int","type":"property"},{"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/hashbytelength","title":"var hashByteLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldcrypto\/digester\/algorithm\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/digester\/algorithm","title":"Digester.Algorithm","type":"enum"}],"path":"\/documentation\/shieldcrypto\/digester","title":"Digester","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/final()","title":"func final() -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/update(data:datalength:)","title":"func update(data: UnsafeRawPointer, dataLength: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/hashlength","title":"static var hashLength: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/digest(data:datalength:)","title":"static func digest(data: UnsafeRawPointer, dataLength: Int) -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/update(data:)-3i8dr","title":"func update(data: Data)","type":"method"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/update(data:)-9et7k","title":"func update(data: UnsafeRawBufferPointer)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/digest(data:)-8aa54","title":"static func digest(data: Data) -> Data","type":"method"},{"path":"\/documentation\/shieldcrypto\/digesterengine\/digest(data:)-8qjp6","title":"static func digest(data: UnsafeRawBufferPointer) -> Data","type":"method"}],"path":"\/documentation\/shieldcrypto\/digesterengine\/anydigester-implementations","title":"AnyDigester Implementations","type":"symbol"}],"path":"\/documentation\/shieldcrypto\/digesterengine","title":"DigesterEngine","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha1engine\/context","title":"SHA1Engine.Context","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha1engine\/create","title":"static let create: Init","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha1engine\/digest","title":"static let digest: Digest","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha1engine\/final","title":"static let final: Final","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha1engine\/hashlength","title":"static let hashLength: Int32","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha1engine\/update","title":"static let update: Update","type":"property"}],"path":"\/documentation\/shieldcrypto\/sha1engine","title":"SHA1Engine","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha224engine\/context","title":"SHA224Engine.Context","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha224engine\/create","title":"static let create: Init","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha224engine\/digest","title":"static let digest: Digest","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha224engine\/final","title":"static let final: Final","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha224engine\/hashlength","title":"static let hashLength: Int32","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha224engine\/update","title":"static let update: Update","type":"property"}],"path":"\/documentation\/shieldcrypto\/sha224engine","title":"SHA224Engine","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha256engine\/context","title":"SHA256Engine.Context","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha256engine\/create","title":"static let create: Init","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha256engine\/digest","title":"static let digest: Digest","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha256engine\/final","title":"static let final: Final","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha256engine\/hashlength","title":"static let hashLength: Int32","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha256engine\/update","title":"static let update: Update","type":"property"}],"path":"\/documentation\/shieldcrypto\/sha256engine","title":"SHA256Engine","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha384engine\/context","title":"SHA384Engine.Context","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha384engine\/create","title":"static let create: Init","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha384engine\/digest","title":"static let digest: Digest","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha384engine\/final","title":"static let final: Final","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha384engine\/hashlength","title":"static let hashLength: Int32","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha384engine\/update","title":"static let update: Update","type":"property"}],"path":"\/documentation\/shieldcrypto\/sha384engine","title":"SHA384Engine","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha512engine\/context","title":"SHA512Engine.Context","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldcrypto\/sha512engine\/create","title":"static let create: Init","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha512engine\/digest","title":"static let digest: Digest","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha512engine\/final","title":"static let final: Final","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha512engine\/hashlength","title":"static let hashLength: Int32","type":"property"},{"path":"\/documentation\/shieldcrypto\/sha512engine\/update","title":"static let update: Update","type":"property"}],"path":"\/documentation\/shieldcrypto\/sha512engine","title":"SHA512Engine","type":"struct"}],"path":"\/documentation\/shieldcrypto","title":"ShieldCrypto","type":"module"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/oidref\/asn1","title":"var asn1: ASN1","type":"property"},{"children":[{"children":[{"path":"\/documentation\/shieldoid\/oidref\/oid-58twl","title":"var oid: OID","type":"property"}],"title":"OIDRef Implementations","type":"groupMarker"}],"path":"\/documentation\/shieldoid\/oidref\/oid-9f2wo","title":"var oid: OID","type":"property"}],"path":"\/documentation\/shieldoid\/oidref","title":"OIDRef","type":"protocol"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldoid\/oid","title":"OID","type":"typealias"}],"path":"\/documentation\/shieldoid","title":"ShieldOID","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/otherprimeinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/otherprimeinfo\/coefficient","title":"var coefficient: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/otherprimeinfo\/exponent","title":"var exponent: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/otherprimeinfo\/prime","title":"var prime: ASN1.Integer","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/otherprimeinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/otherprimeinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/otherprimeinfo","title":"RSAPrivateKey.OtherPrimeInfo","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/coefficient","title":"var coefficient: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/exponent1","title":"var exponent1: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/exponent2","title":"var exponent2: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/modulus","title":"var modulus: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/otherprimeinfos","title":"var otherPrimeInfos: [OtherPrimeInfo]?","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/prime1","title":"var prime1: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/prime2","title":"var prime2: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/privateexponent","title":"var privateExponent: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/publicexponent","title":"var publicExponent: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.property","title":"var version: Version","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/multi","title":"case multi","type":"case"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/twoprime","title":"case twoPrime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/version-swift.enum","title":"RSAPrivateKey.Version","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/encoded()","title":"func encoded() throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/asn1schema","title":"static var asn1Schema: Schema","type":"property"}],"path":"\/documentation\/shieldpkcs\/rsaprivatekey\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldpkcs\/rsaprivatekey","title":"RSAPrivateKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsapublickey\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldpkcs\/rsapublickey\/init(modulus:publicexponent:)","title":"init(modulus: ASN1.Integer, publicExponent: ASN1.Integer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsapublickey\/modulus","title":"var modulus: ASN1.Integer","type":"property"},{"path":"\/documentation\/shieldpkcs\/rsapublickey\/publicexponent","title":"var publicExponent: ASN1.Integer","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsapublickey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldpkcs\/rsapublickey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsapublickey\/encoded()","title":"func encoded() throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/rsapublickey\/asn1schema","title":"static var asn1Schema: Schema","type":"property"}],"path":"\/documentation\/shieldpkcs\/rsapublickey\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldpkcs\/rsapublickey","title":"RSAPublicKey","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/schemas\/ecparameters","title":"static let ECParameters: Schema","type":"property"},{"path":"\/documentation\/shieldpkcs\/schemas\/rsaprivatekey","title":"static let RSAPrivateKey: Schema","type":"property"},{"path":"\/documentation\/shieldpkcs\/schemas\/rsaprivatekeyotherprimeinfo","title":"static let RSAPrivateKeyOtherPrimeInfo: Schema","type":"property"},{"path":"\/documentation\/shieldpkcs\/schemas\/rsaprivatekeyotherprimeinfos","title":"static let RSAPrivateKeyOtherPrimeInfos: Schema","type":"property"},{"path":"\/documentation\/shieldpkcs\/schemas\/rsapublickey","title":"static let RSAPublicKey: Schema","type":"property"}],"path":"\/documentation\/shieldpkcs\/schemas","title":"Schemas","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldpkcs\/ecparameters","title":"ECParameters","type":"typealias"}],"path":"\/documentation\/shieldpkcs","title":"ShieldPKCS","type":"module"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeyerror","title":"SecKeyError","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/loadfailed","title":"case loadFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/parsingfailed","title":"case parsingFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/publickeyretrievalfailed","title":"case publicKeyRetrievalFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/queryfailed","title":"case queryFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/savefailed","title":"case saveFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/trustcreationfailed","title":"case trustCreationFailed","type":"case"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/trustvalidationerror","title":"case trustValidationError","type":"case"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/trustvalidationfailed","title":"case trustValidationFailed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldsecurity\/seccertificateerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldsecurity\/seccertificateerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seccertificateerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldsecurity\/seccertificateerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldsecurity\/seccertificateerror","title":"SecCertificateError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/secencryptionpadding\/none","title":"case none","type":"case"},{"path":"\/documentation\/shieldsecurity\/secencryptionpadding\/oaep","title":"case oaep","type":"case"},{"path":"\/documentation\/shieldsecurity\/secencryptionpadding\/pkcs1","title":"case pkcs1","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/secencryptionpadding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldsecurity\/secencryptionpadding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldsecurity\/secencryptionpadding","title":"SecEncryptionPadding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/ec","title":"case ec","type":"case"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/rsa","title":"case rsa","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/init(rawvalue:)","title":"init?(rawValue: UInt32)","type":"init"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/init(systemvalue:)","title":"init?(systemValue: CFString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/systemvalue","title":"var systemValue: CFString","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldsecurity\/seckeytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/shieldsecurity\/seckeytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldsecurity\/seckeytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldsecurity\/seckeytype","title":"SecKeyType","type":"enum"}],"path":"\/documentation\/shieldsecurity","title":"ShieldSecurity","type":"module"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributevaluehandler\/decode(from:)","title":"func decode(from: Decoder) throws -> Any","type":"method"},{"path":"\/documentation\/shieldx500\/attributevaluehandler\/encode(_:to:)","title":"func encode(Any, to: Encoder) throws","type":"method"},{"path":"\/documentation\/shieldx500\/attributevaluehandler\/equals(_:_:)","title":"func equals(Any, Any) -> Bool","type":"method"},{"path":"\/documentation\/shieldx500\/attributevaluehandler\/hash(_:into:)","title":"func hash(Any, into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldx500\/attributevaluehandler","title":"AttributeValueHandler","type":"protocol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributevaluemapper\/valuedecoder","title":"AttributeValueMapper.ValueDecoder","type":"typealias"},{"path":"\/documentation\/shieldx500\/attributevaluemapper\/valueencoder","title":"AttributeValueMapper.ValueEncoder","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributevaluemapper\/decoder(fortype:)","title":"static func decoder(forType: ObjectIdentifier) -> ValueDecoder?","type":"method"},{"path":"\/documentation\/shieldx500\/attributevaluemapper\/encoder(fortype:)","title":"static func encoder(forType: ObjectIdentifier) -> ValueEncoder?","type":"method"},{"path":"\/documentation\/shieldx500\/attributevaluemapper\/handler(fortype:)","title":"static func handler(forType: ObjectIdentifier) -> AttributeValueHandler?","type":"method"}],"path":"\/documentation\/shieldx500\/attributevaluemapper","title":"AttributeValueMapper","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/namingstyleprotocol\/name(fromoid:)","title":"func name(fromOID: OID) -> String?","type":"method"},{"path":"\/documentation\/shieldx500\/namingstyleprotocol\/oid(fromname:)","title":"func oid(fromName: String) -> OID?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/shieldx500\/namingstyleprotocol\/decode(attributename:mapping:)-32168","title":"static func decode(attributeName: String, mapping: [String : OID]) -> OID?","type":"method"}],"title":"NamingStyleProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/shieldx500\/namingstyleprotocol\/decode(attributename:mapping:)-7stz9","title":"static func decode(attributeName: String, mapping: [String : OID]) -> OID?","type":"method"}],"path":"\/documentation\/shieldx500\/namingstyleprotocol","title":"NamingStyleProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/anystringattributevaluehandler\/decode(from:)","title":"func decode(from: Decoder) throws -> Any","type":"method"},{"path":"\/documentation\/shieldx500\/anystringattributevaluehandler\/encode(_:to:)","title":"func encode(Any, to: Encoder) throws","type":"method"},{"path":"\/documentation\/shieldx500\/anystringattributevaluehandler\/equals(_:_:)","title":"func equals(Any, Any) -> Bool","type":"method"},{"path":"\/documentation\/shieldx500\/anystringattributevaluehandler\/hash(_:into:)","title":"func hash(Any, into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/anystringattributevaluehandler\/instance","title":"static let instance: AnyStringAttributeValueHandler","type":"property"}],"path":"\/documentation\/shieldx500\/anystringattributevaluehandler","title":"AnyStringAttributeValueHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/init(type:value:)","title":"init(type: ObjectIdentifier, value: Any)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/type","title":"var type: ObjectIdentifier","type":"property"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/value","title":"var value: Any","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/shieldx500\/attributetypeandvalue\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/shieldx500\/attributetypeandvalue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx500\/attributetypeandvalue\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx500\/attributetypeandvalue\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/==(_:_:)","title":"static func == (AttributeTypeAndValue, AttributeTypeAndValue) -> Bool","type":"op"}],"path":"\/documentation\/shieldx500\/attributetypeandvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/attributetypeandvalue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldx500\/attributetypeandvalue\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx500\/attributetypeandvalue","title":"AttributeTypeAndValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/namingstyle\/init(implementation:)","title":"init(implementation: NamingStyleProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/namingstyle\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/namingstyle\/name(fromoid:)","title":"func name(fromOID: OID) -> String?","type":"method"},{"path":"\/documentation\/shieldx500\/namingstyle\/oid(fromname:)","title":"func oid(fromName: String) -> OID?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/namingstyle\/rfc4519","title":"static var rfc4519: NamingStyle","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/namingstyle\/decode(attributename:mapping:)","title":"static func decode(attributeName: String, mapping: [String : OID]) -> OID?","type":"method"}],"path":"\/documentation\/shieldx500\/namingstyle\/namingstyleprotocol-implementations","title":"NamingStyleProtocol Implementations","type":"symbol"}],"path":"\/documentation\/shieldx500\/namingstyle","title":"NamingStyle","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/schemas\/attributetypeandvalue(_:unknowntypeschema:)-8mtj2","title":"static func AttributeTypeAndValue(Schema.DynamicMap, unknownTypeSchema: Schema) -> Schema","type":"method"},{"path":"\/documentation\/shieldx500\/schemas\/rdnsequence(_:unknowntypeschema:)-2gcmz","title":"static func RDNSequence(Schema.DynamicMap, unknownTypeSchema: Schema) -> Schema","type":"method"},{"path":"\/documentation\/shieldx500\/schemas\/relativedistinguishedname(_:unknowntypeschema:)-98bj2","title":"static func RelativeDistinguishedName(Schema.DynamicMap, unknownTypeSchema: Schema) -> Schema","type":"method"},{"path":"\/documentation\/shieldx500\/schemas\/attributetypeandvalue(_:unknowntypeschema:)-8qwz0","title":"static func attributeTypeAndValue(Schema.DynamicMap, unknownTypeSchema: Schema) -> Schema","type":"method"},{"path":"\/documentation\/shieldx500\/schemas\/rdnsequence(_:unknowntypeschema:)-5o44u","title":"static func rdnSequence(Schema.DynamicMap, unknownTypeSchema: Schema) -> Schema","type":"method"},{"path":"\/documentation\/shieldx500\/schemas\/relativedistinguishedname(_:unknowntypeschema:)-916rj","title":"static func relativeDistinguishedName(Schema.DynamicMap, unknownTypeSchema: Schema) -> Schema","type":"method"}],"path":"\/documentation\/shieldx500\/schemas","title":"Schemas","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/unknownattributevaluehandler\/decode(from:)","title":"func decode(from: Decoder) throws -> Any","type":"method"},{"path":"\/documentation\/shieldx500\/unknownattributevaluehandler\/encode(_:to:)","title":"func encode(Any, to: Encoder) throws","type":"method"},{"path":"\/documentation\/shieldx500\/unknownattributevaluehandler\/equals(_:_:)","title":"func equals(Any, Any) -> Bool","type":"method"},{"path":"\/documentation\/shieldx500\/unknownattributevaluehandler\/hash(_:into:)","title":"func hash(Any, into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/unknownattributevaluehandler\/instance","title":"static let instance: UnknownAttributeValueHandler","type":"property"}],"path":"\/documentation\/shieldx500\/unknownattributevaluehandler","title":"UnknownAttributeValueHandler","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldx500\/rdnsequence","title":"RDNSequence","type":"typealias"},{"path":"\/documentation\/shieldx500\/relativedistinguishedname","title":"RelativeDistinguishedName","type":"typealias"}],"path":"\/documentation\/shieldx500","title":"ShieldX500","type":"module"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributevalue\/attributehandler","title":"static var attributeHandler: AttributeValueHandler.Type","type":"property"},{"path":"\/documentation\/shieldx509\/attributevalue\/attributetype","title":"static var attributeType: ObjectIdentifier","type":"property"}],"path":"\/documentation\/shieldx509\/attributevalue","title":"AttributeValue","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributevaluehandler\/decode(from:)","title":"static func decode(from: inout UnkeyedDecodingContainer) throws -> Any","type":"method"},{"path":"\/documentation\/shieldx509\/attributevaluehandler\/encode(_:to:)","title":"static func encode(Any, to: inout UnkeyedEncodingContainer) throws","type":"method"},{"path":"\/documentation\/shieldx509\/attributevaluehandler\/equal(_:_:)","title":"static func equal(Any, Any) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/attributevaluehandler\/hash(_:into:)","title":"static func hash(Any, into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldx509\/attributevaluehandler","title":"AttributeValueHandler","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributevalueshandler\/handler(for:)","title":"static func handler(for: ObjectIdentifier) -> AttributeValueHandler.Type","type":"method"}],"path":"\/documentation\/shieldx509\/attributevalueshandler","title":"AttributeValuesHandler","type":"protocol"},{"path":"\/documentation\/shieldx509\/criticalextensionvalue","title":"CriticalExtensionValue","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensionvalue\/extensionid","title":"static var extensionID: ObjectIdentifier","type":"property"}],"path":"\/documentation\/shieldx509\/extensionvalue","title":"ExtensionValue","type":"protocol"},{"path":"\/documentation\/shieldx509\/noncriticalextensionvalue","title":"NonCriticalExtensionValue","type":"protocol"},{"path":"\/documentation\/shieldx509\/singleattributevalue","title":"SingleAttributeValue","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/init(algorithm:parameters:)","title":"init(algorithm: ObjectIdentifier, parameters: ASN1?)","type":"init"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/init(digestalgorithm:keytype:)","title":"init(digestAlgorithm: Digester.Algorithm, keyType: SecKeyType) throws","type":"init"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/init(publickey:)","title":"init(publicKey: SecKey) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/algorithm","title":"var algorithm: ObjectIdentifier","type":"property"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/parameters","title":"var parameters: ASN1?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/error\/unsupportedalgorithm","title":"case unsupportedAlgorithm","type":"case"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/error\/unsupportedeckeysize","title":"case unsupportedECKeySize","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/algorithmidentifier\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldx509\/algorithmidentifier\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/algorithmidentifier\/error","title":"AlgorithmIdentifier.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/algorithmidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/algorithmidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/algorithmidentifier","title":"AlgorithmIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attribute\/init(attrtype:attrvalues:)","title":"init(attrType: ObjectIdentifier, attrValues: [Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attribute\/attrtype","title":"var attrType: ObjectIdentifier","type":"property"},{"path":"\/documentation\/shieldx509\/attribute\/attrvalues","title":"var attrValues: [Any]","type":"property"}],"path":"\/documentation\/shieldx509\/attribute","title":"Attribute","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/all(_:)-1y48w","title":"func all<AV>(AV.Type) throws -> [[AV]]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/all(_:)-6wd49","title":"func all<AV>(AV.Type) throws -> [AV]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/append(_:)","title":"func append(Attribute)","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/append(multivalued:)","title":"func append<AV>(multiValued: [AV])","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/append(singlevalued:)","title":"func append<AV>(singleValued: AV)","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/append(type:values:)","title":"func append(type: ObjectIdentifier, values: [ASN1])","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/first(_:)-4fesr","title":"func first<AV>(AV.Type) throws -> AV?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/first(_:)-6qw87","title":"func first<AV>(AV.Type) throws -> [AV]?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/remove(_:)","title":"func remove<AV>(AV.Type)","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/remove(type:)","title":"func remove(type: ObjectIdentifier)","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/replace(multivalued:)","title":"func replace<AV>(multiValued: [AV])","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/replace(singlevalued:)","title":"func replace<AV>(singleValued: AV)","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/replace(type:values:)","title":"func replace(type: ObjectIdentifier, values: [ASN1])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/error\/invalidelement","title":"case invalidElement","type":"case"},{"path":"\/documentation\/shieldx509\/attributes\/error\/singlevaluerequired","title":"case singleValueRequired","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/attributes\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldx509\/attributes\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/attributes\/error","title":"Attributes.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/shieldx509\/attributes\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/shieldx509\/attributes\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/shieldx509\/attributes\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/shieldx509\/attributes\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shieldx509\/attributes\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/shieldx509\/attributes\/underestimatedcount-9x1xv","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/map(_:)-4mxuv","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/subscript(_:)-3iimm","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shieldx509\/attributes\/subscript(_:)-46ylb","title":"subscript(Index) -> Attribute","type":"subscript"},{"path":"\/documentation\/shieldx509\/attributes\/subscript(_:)-89o4e","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shieldx509\/attributes\/subscript(_:)-8nm4z","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/index","title":"Attributes.Index","type":"typealias"},{"path":"\/documentation\/shieldx509\/attributes\/iterator","title":"Attributes.Iterator","type":"typealias"}],"path":"\/documentation\/shieldx509\/attributes\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx509\/attributes\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx509\/attributes\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shieldx509\/attributes\/==(_:_:)","title":"static func == (Attributes, Attributes) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/attributes\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldx509\/attributes\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/shieldx509\/attributes\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/shieldx509\/attributes\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/shieldx509\/attributes\/underestimatedcount-9otus","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/attributes\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/flatmap(_:)-20ffo","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/flatmap(_:)-818hy","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/map(_:)-22opc","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/sorted(using:)-4z0c","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/sorted(using:)-6t54p","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/attributes\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/shieldx509\/attributes\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/attributes","title":"Attributes","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/crattributevalueshandler\/supported","title":"static let supported: [ObjectIdentifier : AttributeValue.Type]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/crattributevalueshandler\/handler(for:)","title":"static func handler(for: ObjectIdentifier) -> AttributeValueHandler.Type","type":"method"}],"path":"\/documentation\/shieldx509\/crattributevalueshandler","title":"CRAttributeValuesHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/init(version:subject:subjectpkinfo:attributes:)","title":"init(version: Version, subject: Name, subjectPKInfo: SubjectPublicKeyInfo, attributes: CRAttributes?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/attributes","title":"var attributes: CRAttributes?","type":"property"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/subject","title":"var subject: Name","type":"property"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/subjectpkinfo","title":"var subjectPKInfo: SubjectPublicKeyInfo","type":"property"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.property","title":"var version: Version","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/signed(using:digestalgorithm:)","title":"func signed(using: SecKey, digestAlgorithm: Digester.Algorithm) throws -> CertificationRequest","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/v1","title":"case v1","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/certificationrequestinfo\/version-swift.enum","title":"CertificationRequestInfo.Version","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/certificationrequestinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/encoded()","title":"func encoded() throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/certificationrequestinfo\/asn1schema","title":"static var asn1Schema: Schema","type":"property"}],"path":"\/documentation\/shieldx509\/certificationrequestinfo\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/certificationrequestinfo","title":"CertificationRequestInfo","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/directorynameattributemapper\/decoder(fortype:)","title":"static func decoder(forType: ObjectIdentifier) -> ValueDecoder?","type":"method"},{"path":"\/documentation\/shieldx509\/directorynameattributemapper\/encoder(fortype:)","title":"static func encoder(forType: ObjectIdentifier) -> ValueEncoder?","type":"method"},{"path":"\/documentation\/shieldx509\/directorynameattributemapper\/handler(fortype:)","title":"static func handler(forType: ObjectIdentifier) -> ShieldX500.AttributeValueHandler?","type":"method"}],"path":"\/documentation\/shieldx509\/directorynameattributemapper","title":"DirectoryNameAttributeMapper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/edipartyname\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/edipartyname\/init(nameassigner:partyname:)","title":"init(nameAssigner: AnyString?, partyName: AnyString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/edipartyname\/nameassigner","title":"var nameAssigner: AnyString?","type":"property"},{"path":"\/documentation\/shieldx509\/edipartyname\/partyname","title":"var partyName: AnyString","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/edipartyname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/edipartyname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/edipartyname","title":"EDIPartyName","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extension\/init(extnid:critical:extnvalue:)","title":"init(extnId: ObjectIdentifier, critical: Bool, extnValue: Data)","type":"init"},{"path":"\/documentation\/shieldx509\/extension\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/extension\/init(value:)-3nks0","title":"init<Value>(value: Value) throws","type":"init"},{"path":"\/documentation\/shieldx509\/extension\/init(value:)-9ul3","title":"init<Value>(value: Value) throws","type":"init"},{"path":"\/documentation\/shieldx509\/extension\/init(value:critical:)","title":"init<Value>(value: Value, critical: Bool) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extension\/critical","title":"var critical: Bool","type":"property"},{"path":"\/documentation\/shieldx509\/extension\/extnid","title":"var extnID: ObjectIdentifier","type":"property"},{"path":"\/documentation\/shieldx509\/extension\/extnvalue","title":"var extnValue: Data","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extension\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/extension\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/extension","title":"Extension","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/all(_:)","title":"func all<Value>(Value.Type) throws -> [Value]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/append(_:)","title":"func append(Extension)","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/append(id:iscritical:value:)","title":"func append(id: ObjectIdentifier, isCritical: Bool, value: Data)","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/append(value:)-1hpvz","title":"func append<Value>(value: Value) throws","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/append(value:)-9dot0","title":"func append<Value>(value: Value) throws","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/append(value:iscritical:)","title":"func append<Value>(value: Value, isCritical: Bool) throws","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/first(_:)","title":"func first<Value>(Value.Type) throws -> Value?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/remove(_:)","title":"func remove<Value>(Value.Type)","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/remove(id:)","title":"func remove(id: ObjectIdentifier)","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/replace(_:)","title":"func replace(Extension)","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/replace(value:)-34ywr","title":"func replace<Value>(value: Value) throws","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/replace(value:)-lqja","title":"func replace<Value>(value: Value) throws","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/replace(value:iscritical:)","title":"func replace<Value>(value: Value, isCritical: Bool) throws","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/replaceall(_:)","title":"func replaceAll<S>(S)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/attributehandler","title":"static var attributeHandler: AttributeValueHandler.Type","type":"property"},{"path":"\/documentation\/shieldx509\/extensions\/attributetype","title":"static var attributeType: OID","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/error\/invalidvalue","title":"case invalidValue","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/extensions\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/shieldx509\/extensions\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/extensions\/error","title":"Extensions.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/shieldx509\/extensions\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/shieldx509\/extensions\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/shieldx509\/extensions\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/shieldx509\/extensions\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shieldx509\/extensions\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/shieldx509\/extensions\/underestimatedcount-48n1w","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/map(_:)-8y43r","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/subscript(_:)-3zlke","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shieldx509\/extensions\/subscript(_:)-4vy7r","title":"subscript(Index) -> Extension","type":"subscript"},{"path":"\/documentation\/shieldx509\/extensions\/subscript(_:)-8alho","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shieldx509\/extensions\/subscript(_:)-8awji","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/index","title":"Extensions.Index","type":"typealias"},{"path":"\/documentation\/shieldx509\/extensions\/iterator","title":"Extensions.Iterator","type":"typealias"}],"path":"\/documentation\/shieldx509\/extensions\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx509\/extensions\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx509\/extensions\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/extensions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/init(arrayliteral:)","title":"init(arrayLiteral: Extension...)","type":"init"}],"path":"\/documentation\/shieldx509\/extensions\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"}],"path":"\/documentation\/shieldx509\/extensions\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/shieldx509\/extensions\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/shieldx509\/extensions\/underestimatedcount-2h1rw","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/extensions\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/flatmap(_:)-8og10","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/flatmap(_:)-8z658","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/map(_:)-6a1zd","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/sorted(using:)-6a0rh","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/sorted(using:)-8ak5q","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/extensions\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/shieldx509\/extensions\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/extensions","title":"Extensions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/othername\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/othername\/init(typeid:value:)","title":"init(typeId: ObjectIdentifier, value: ASN1)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/othername\/typeid","title":"var typeId: ObjectIdentifier","type":"property"},{"path":"\/documentation\/shieldx509\/othername\/value","title":"var value: ASN1","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/othername\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/othername\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/othername\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/othername","title":"OtherName","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/schemas\/authoritykeyidentifier","title":"static let AuthorityKeyIdentifier: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/basicconstraints","title":"static let BasicConstraints: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/criattributes","title":"static let CRIAttributes: Schema.DynamicMap","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/certificate","title":"static let Certificate: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/certificateserialnumber","title":"static let CertificateSerialNumber: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/certificationrequest","title":"static let CertificationRequest: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/certificationrequestinfo","title":"static let CertificationRequestInfo: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/directorynames","title":"static let DirectoryNames: Schema.DynamicMap","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/edipartyname","title":"static let EDIPartyName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/extension","title":"static let Extension: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/extensions","title":"static let Extensions: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/generalname","title":"static let GeneralName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/generalnames","title":"static let GeneralNames: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/issueraltname","title":"static let IssuerAltName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/keyidentifier","title":"static let KeyIdentifier: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/name","title":"static let Name: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/othername","title":"static let OtherName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/pkinfoalgorithms","title":"static let PKInfoAlgorithms: Schema.DynamicMap","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/signaturealgorithms","title":"static let SignatureAlgorithms: Schema.DynamicMap","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/subjectaltname","title":"static let SubjectAltName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/subjectkeyidentifier","title":"static let SubjectKeyIdentifier: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/subjectpublickeyinfo","title":"static let SubjectPublicKeyInfo: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/tbscertificate","title":"static let TBSCertificate: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/time","title":"static let Time: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/uniqueidentifier","title":"static let UniqueIdentifier: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/validity","title":"static let Validity: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/version","title":"static let Version: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/x520commonname","title":"static let X520CommonName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/x520localityname","title":"static let X520LocalityName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/x520name","title":"static let X520Name: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/x520organizationname","title":"static let X520OrganizationName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/x520organizationalunitname","title":"static let X520OrganizationalUnitName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/x520pseudonym","title":"static let X520Pseudonym: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/x520stateorprovincename","title":"static let X520StateOrProvinceName: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/x520title","title":"static let X520Title: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/extkeyusageextension","title":"static let extKeyUsageExtension: Schema","type":"property"},{"path":"\/documentation\/shieldx509\/schemas\/keyusageextension","title":"static let keyUsageExtension: Schema","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/schemas\/algorithmidentifier(_:)-7sj26","title":"static func AlgorithmIdentifier(Schema.DynamicMap) -> Schema","type":"method"},{"path":"\/documentation\/shieldx509\/schemas\/attribute(_:unknowntypeschema:)-1syql","title":"static func Attribute(Schema.DynamicMap, unknownTypeSchema: Schema?) -> Schema","type":"method"},{"path":"\/documentation\/shieldx509\/schemas\/attributes(_:unknowntypeschema:)-5h6f7","title":"static func Attributes(Schema.DynamicMap, unknownTypeSchema: Schema?) -> Schema","type":"method"},{"path":"\/documentation\/shieldx509\/schemas\/directorystring(max:)-157le","title":"static func DirectoryString(max: Int) -> Schema","type":"method"},{"path":"\/documentation\/shieldx509\/schemas\/algorithmidentifier(_:)-33e9f","title":"static func algorithmIdentifier(Schema.DynamicMap) -> Schema","type":"method"},{"path":"\/documentation\/shieldx509\/schemas\/attribute(_:unknowntypeschema:)-6jdbw","title":"static func attribute(Schema.DynamicMap, unknownTypeSchema: Schema?) -> Schema","type":"method"},{"path":"\/documentation\/shieldx509\/schemas\/attributes(_:unknowntypeschema:)-2q32p","title":"static func attributes(Schema.DynamicMap, unknownTypeSchema: Schema?) -> Schema","type":"method"},{"path":"\/documentation\/shieldx509\/schemas\/directorystring(max:)-62qg2","title":"static func directoryString(max: Int) -> Schema","type":"method"}],"path":"\/documentation\/shieldx509\/schemas","title":"Schemas","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/simpleattributevaluehandler\/decode(from:)","title":"static func decode(from: inout UnkeyedDecodingContainer) throws -> Any","type":"method"},{"path":"\/documentation\/shieldx509\/simpleattributevaluehandler\/encode(_:to:)","title":"static func encode(Any, to: inout UnkeyedEncodingContainer) throws","type":"method"},{"path":"\/documentation\/shieldx509\/simpleattributevaluehandler\/equal(_:_:)","title":"static func equal(Any, Any) -> Bool","type":"method"},{"path":"\/documentation\/shieldx509\/simpleattributevaluehandler\/hash(_:into:)","title":"static func hash(Any, into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldx509\/simpleattributevaluehandler","title":"SimpleAttributeValueHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/init(algorithm:subjectpublickey:)","title":"init(algorithm: AlgorithmIdentifier, subjectPublicKey: BitString)","type":"init"},{"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/algorithm","title":"var algorithm: AlgorithmIdentifier","type":"property"},{"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/subjectpublickey","title":"var subjectPublicKey: BitString","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/encoded()","title":"func encoded() throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/asn1schema","title":"static var asn1Schema: Schema","type":"property"}],"path":"\/documentation\/shieldx509\/subjectpublickeyinfo\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/subjectpublickeyinfo","title":"SubjectPublicKeyInfo","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/validity-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/tbscertificate\/validity-swift.struct\/init(notbefore:notafter:)","title":"init(notBefore: AnyTime, notAfter: AnyTime)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/validity-swift.struct\/notafter","title":"var notAfter: AnyTime","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/validity-swift.struct\/notbefore","title":"var notBefore: AnyTime","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/validity-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/tbscertificate\/validity-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/tbscertificate\/validity-swift.struct","title":"TBSCertificate.Validity","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/shieldx509\/tbscertificate\/init(version:serialnumber:signature:issuer:validity:subject:subjectpublickeyinfo:issueruniqueid:subjectuniqueid:extensions:)","title":"init(version: Version, serialNumber: ASN1.Integer, signature: AlgorithmIdentifier, issuer: Name, validity: Validity, subject: Name, subjectPublicKeyInfo: SubjectPublicKeyInfo, issuerUniqueID: UniqueIdentifier?, subjectUniqueID: UniqueIdentifier?, extensions: Extensions?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/extensions","title":"var extensions: Extensions?","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/issuer","title":"var issuer: Name","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/issueruniqueid","title":"var issuerUniqueID: UniqueIdentifier?","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/serialnumber-swift.property","title":"var serialNumber: SerialNumber","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/signature","title":"var signature: AlgorithmIdentifier","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/subject","title":"var subject: Name","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/subjectpublickeyinfo","title":"var subjectPublicKeyInfo: SubjectPublicKeyInfo","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/subjectuniqueid","title":"var subjectUniqueID: UniqueIdentifier?","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/validity-swift.property","title":"var validity: Validity","type":"property"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.property","title":"var version: Version","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/serialnumber-swift.typealias","title":"TBSCertificate.SerialNumber","type":"typealias"},{"path":"\/documentation\/shieldx509\/tbscertificate\/uniqueidentifier","title":"TBSCertificate.UniqueIdentifier","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/v1","title":"case v1","type":"case"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/v2","title":"case v2","type":"case"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/v3","title":"case v3","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/tbscertificate\/version-swift.enum","title":"TBSCertificate.Version","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/tbscertificate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/encoded()","title":"func encoded() throws -> Data","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/tbscertificate\/asn1schema","title":"static var asn1Schema: Schema","type":"property"}],"path":"\/documentation\/shieldx509\/tbscertificate\/schemaspecified-implementations","title":"SchemaSpecified Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/tbscertificate","title":"TBSCertificate","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/crattributes","title":"CRAttributes","type":"typealias"},{"path":"\/documentation\/shieldx509\/directoryname","title":"DirectoryName","type":"typealias"},{"path":"\/documentation\/shieldx509\/generalnames","title":"GeneralNames","type":"typealias"},{"path":"\/documentation\/shieldx509\/keyidentifier","title":"KeyIdentifier","type":"typealias"},{"path":"\/documentation\/shieldx509\/name","title":"Name","type":"typealias"},{"path":"\/documentation\/shieldx509\/namestringcomposer","title":"NameStringComposer","type":"typealias"},{"path":"\/documentation\/shieldx509\/unknownattributevaluehandler","title":"UnknownAttributeValueHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/generalname\/directoryname(_:)","title":"case directoryName(Name)","type":"case"},{"path":"\/documentation\/shieldx509\/generalname\/dnsname(_:)","title":"case dnsName(String)","type":"case"},{"path":"\/documentation\/shieldx509\/generalname\/edipartyname(_:)","title":"case ediPartyName(EDIPartyName)","type":"case"},{"path":"\/documentation\/shieldx509\/generalname\/ipaddress(_:)","title":"case ipAddress(Data)","type":"case"},{"path":"\/documentation\/shieldx509\/generalname\/othername(_:)","title":"case otherName(OtherName)","type":"case"},{"path":"\/documentation\/shieldx509\/generalname\/registeredid(_:)","title":"case registeredID(ObjectIdentifier)","type":"case"},{"path":"\/documentation\/shieldx509\/generalname\/rfc822name(_:)","title":"case rfc822Name(String)","type":"case"},{"path":"\/documentation\/shieldx509\/generalname\/uniformresourceidentifier(_:)","title":"case uniformResourceIdentifier(String)","type":"case"},{"path":"\/documentation\/shieldx509\/generalname\/x400address(_:)","title":"case x400Address(ASN1)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/generalname\/init(tag:value:)","title":"init?(tag: ASN1.AnyTag, value: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/generalname\/tag","title":"var tag: ASN1.AnyTag","type":"property"},{"path":"\/documentation\/shieldx509\/generalname\/value","title":"var value: Any?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/generalname\/encode(schema:)","title":"func encode(schema: Schema) throws -> ASN1","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/generalname\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shieldx509\/generalname\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/generalname\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shieldx509\/generalname\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shieldx509\/generalname\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shieldx509\/generalname\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/shieldx509\/generalname","title":"GeneralName","type":"enum"}],"path":"\/documentation\/shieldx509","title":"ShieldX509","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}